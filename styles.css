* {
    box-sizing: border-box;
}

html {
	min-height: 100vh; /*vh = Relative to 1% of the height of the viewport*.*Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm.*/
	overflow-x: hidden;
}

body 
	{
	/*background: linear-gradient(to bottom, rgba(51, 51, 204,0), rgba(51, 51, 204,0.1), rgba(51, 51, 204,0.1),rgba(51, 51, 204,0.2), rgba(51, 51, 204,0.6));*/
	}
	
h1 
	{
	position: relative;	 
    color: black;
	text-align: center;	
	font-family: Arial, serif;	/* serif = fallback font*/
	padding-left: calc(100vw - 100%);	/*necessary to prevent element from shifting left when scrollbar appears*/
	/*The trick is that 100vw represents 100% of the viewport including the scrollbar. If you subtract 100%, which is the available space without the scrollbar, you end up with the width of the scrollbar or 0 if it is not present. Creating a padding of that width on the left will simulate a second scrollbar, shifting centered content back to the right. Please note that this will only work if the scrollable element uses the page's entire width, but this should be no problem most of the time because there are only few other cases where you have centered scrollable content.*/
	}
	
p 
	{
    color: black;
	position: relative;
	text-align: center;
	font-family: Arial, serif;
	padding-left: calc(100vw - 100%);	/*necessary to prevent element from shifting left when scrollbar appears*/
	/*The trick is that 100vw represents 100% of the viewport including the scrollbar. If you subtract 100%, which is the available space without the scrollbar, you end up with the width of the scrollbar or 0 if it is not present. Creating a padding of that width on the left will simulate a second scrollbar, shifting centered content back to the right. Please note that this will only work if the scrollable element uses the page's entire width, but this should be no problem most of the time because there are only few other cases where you have centered scrollable content.*/
	}

#myBtnContainer {
	text-align:center;
	max-width: 80vw;
	margin-left: 6vw;	
	margin-right: 14vw;	
	padding-left: calc(100vw - 100%);	/*necessary to prevent element from shifting left when scrollbar appears*/
	/*The trick is that 100vw represents 100% of the viewport including the scrollbar. If you subtract 100%, which is the available space without the scrollbar, you end up with the width of the scrollbar or 0 if it is not present. Creating a padding of that width on the left will simulate a second scrollbar, shifting centered content back to the right. Please note that this will only work if the scrollable element uses the page's entire width, but this should be no problem most of the time because there are only few other cases where you have centered scrollable content.*/
}	
	
.btn {
	margin-top: 2px;
	margin-bottom: 2px;
	border-style: none;
	outline: none;
	padding: 10px 14px;
	background-color: white;
	cursor: pointer;
	font-family: Arial, serif;
	font-size: 16px;
	transition-duration: 0.3s;
}

.btn:hover {
	background-color: #ddd;
	color: white;
}

.btn.active {
	background-color: #666;
	color: white;
}

/* Create four equal columns that sits next to each other */
/*.grid {
	margin-top: 8px;
	max-width: 60vw;
}

.grid img {
	margin-bottom: 8px;
	height: 100%;
	max-width: 30vw;
	min-width: 30vw;
}*/

/*@media screen and (max-width: 800px) {
.grid {
    column-count: 1;
    column-gap: 12px;
  }
}

/* The "show" class is added to the filtered elements
.show {
	height: 100%;
	max-width: 30vw;
	min-width: 30vw;
	padding-left: 12px;	
}	*/

.hide{
	display: none;	
}

/* Style the Image Used to Trigger the Modal */
#myImg1,#myImg2, #myImg3, #myImg4, #myImg5, #myImg6, #myImg7, #myImg8, #myImg9, #myImg10, #myImg11, #myImg12, #myImg13, #myImg14, #myImg15, #myImg16, #myImg17, #myImg18, #myImg19, #myImg20, #myImg21, #myImg22, #myImg23, #myImg24, #myImg25 {
    cursor: pointer;
    transition: 0.3s;
	-webkit-transform: translateZ(0);	/* necessary to fix transition-opacity-blinking-glitch when hovering over images */
	width: calc(100% + .49px);	/* necessary to fix transition-opacity-blinking-glitch when hovering over images */
}

#myImg1:hover {opacity: 0.7;}
#myImg2:hover {opacity: 0.7;}
#myImg3:hover {opacity: 0.7;}
#myImg4:hover {opacity: 0.7;}
#myImg5:hover {opacity: 0.7;}
#myImg6:hover {opacity: 0.7;}
#myImg7:hover {opacity: 0.7;}
#myImg8:hover {opacity: 0.7;}
#myImg9:hover {opacity: 0.7;}
#myImg10:hover {opacity: 0.7;}
#myImg11:hover {opacity: 0.7;}
#myImg12:hover {opacity: 0.7;}
#myImg13:hover {opacity: 0.7;}
#myImg14:hover {opacity: 0.7;}
#myImg15:hover {opacity: 0.7;}
#myImg16:hover {opacity: 0.7;}
#myImg17:hover {opacity: 0.7;}
#myImg18:hover {opacity: 0.7;}
#myImg19:hover {opacity: 0.7;}
#myImg20:hover {opacity: 0.7;}
#myImg21:hover {opacity: 0.7;}
#myImg22:hover {opacity: 0.7;}
#myImg23:hover {opacity: 0.7;}
#myImg24:hover {opacity: 0.7;}
#myImg25:hover {opacity: 0.7;}

/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 0px; /* Location of the box */
    left: 0px;	
    top: 0px;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: hidden; /* Hides background scrollbar */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
}

/* Modal Content (Image) */
.modal-content {
    margin: auto;
    display: block;
	height:100%;
    width: auto;
    max-width: 700px;
}

/* Caption of Modal Image (Image Text) - Same Width as the Image */
#caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

/* Add Animation - Zoom in the Modal */
.modal-content, #caption { 
    animation-name: zoom;
    animation-duration: 0.6s;
}

@keyframes zoom {
    from {transform:scale(0)} 
    to {transform:scale(1)}
}

/* The Close Button */
.close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.close:hover,
.close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

.social-media{
    display: flex;
    justify-content: center;
}